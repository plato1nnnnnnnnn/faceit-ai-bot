version: '3.8'
services:
  db:
    image: postgres:16
    restart: always
    environment:
      POSTGRES_USER: faceit
      POSTGRES_PASSWORD: faceit
      POSTGRES_DB: faceit
    ports:
      - '5432:5432'
    volumes:
      - db_data:/var/lib/postgresql/data
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    depends_on:
      db:
        condition: service_started
    env_file:
      - ./.env
    environment:
      - DATABASE_URL=postgresql://faceit:faceit@db:5432/faceit
    ports:
      - '8000:8000'
    volumes:
      - ./:/app:cached
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://127.0.0.1:8000/health || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
  web:
    build:
      context: .
      dockerfile: Dockerfile.web
    depends_on:
      api:
        condition: service_healthy
    env_file:
      - ./.env
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:3000/ > /dev/null || exit 1"]
      interval: 10s
      timeout: 3s
      retries: 5
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.10
    container_name: elasticsearch
    environment:
      - discovery.type=single-node
    ports:
      - "9200:9200"
  kibana:
    image: docker.elastic.co/kibana/kibana:7.17.10
    container_name: kibana
    ports:
      - "5601:5601"
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
volumes:
  db_data:
  grafana-data:
